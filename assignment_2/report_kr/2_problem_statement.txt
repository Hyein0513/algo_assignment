본 과제에서 다루는 문제는 \*\*2차원 유클리디안 외판원 문제(Euclidean Traveling Salesman Problem)\*\*이다. 이는 평면 위에 주어진 $n$개의 점(도시)을 각각 정확히 한 번씩 방문하고 출발 지점으로 되돌아오는 \*\*최단 경로(Tour)\*\*를 찾는 문제이다. 각 도시간 거리는 **유클리디안 거리**, 즉 두 점 사이의 직선 거리로 계산된다. 이때 거리는 반올림하여 int로 측정된다(EUC_2D 정의 참고)

이 문제는 다음과 같이 수학적으로 표현할 수 있다:

* 입력: 점 집합
  `P = {p₁, p₂, ..., pₙ}`

* 경로: 한 번씩 모든 점을 방문하는 순열
  `T = (pᵢ₁, pᵢ₂, ..., pᵢₙ, pᵢ₁)`

* 목적: 총 거리

  ```
  TourLength(T) = Σ_{k=1}^{n} ||p_{iₖ} - p_{iₖ₊₁}||
  ```

  를 최소화하는 경로 T를 찾는 것

이 문제는 \*\*NP-완전(NP-hard)\*\*으로 분류되며, 특히 입력 크기가 커질수록 **정확한 해를 구하는 데 필요한 계산량이 지수적으로 증가**한다. 따라서 실제 응용에서는 **근사 알고리즘(heuristics)**이나 **메타휴리스틱(metaheuristics)**을 활용하여 제한된 자원 내에서 양질의 해를 빠르게 구하는 것이 일반적이다.

이번 과제에서는 아래와 같은 다양한 알고리즘을 직접 구현하고 비교한다:

* MST 기반 2-근사 알고리즘
* Held-Karp 동적 계획 알고리즘
* Greedy 최근접 탐색
* Insertion 휴리스틱
* 제안 알고리즘: 제안 알고리즘: 방향성 패널티와 Convex Hull 보정을 결합한 개선된 greedy 방식


이러한 알고리즘들을 동일한 입력 데이터셋에 적용하여 경로 길이, 실행 시간, 메모리 사용량을 기준으로 성능을 정량적으로 비교하고, 제안 기법의 효과를 실험적으로 분석하였다.